import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import 'animate.css';
import { Suspense } from "react";
import Loading from "@/components/Loading";
import Query from "@/lib/query/queryProvider"

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const DelayedComponent = () => {
  const delay = new Promise((resolve) => setTimeout(resolve, 3000));
  return delay.then(() => <div></div>);
};


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Query>
          <Suspense fallback={<Loading />}>
            <DelayedComponent />
            {children}
          </Suspense>
        </Query>
      </body>
    </html>
  );
}
